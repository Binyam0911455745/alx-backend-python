# Django-Middleware-0x03/messaging_app/settings.py

"""
Django settings for messaging_app project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os # Make sure this is imported for os.path.join used in LOGGING


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vj&u&q81!3hm2h_92yavxzmn!p3um7k2fg12)xjzr+x2d(_4-v' # Keep your original secret key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken', # For DRF's built-in TokenAuthentication (good to have)
    'rest_framework_simplejwt', # For JWT
    'django_filters',           # For filtering
    'chats',                    # Your chats app
    # Add any other apps you might have
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware', # Corrected spelling
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'chats.middleware.logging_middleware.RequestLoggingMiddleware',       # <--- CORRECTED PATH
    'chats.middleware.restrict_by_time.RestrictAccessByTimeMiddleware',   # <--- ADDED NEW MIDDLEWARE
    'chats.middleware.RestrictAccessByTimeMiddleware', 
    'chats.middleware.RequestLoggingMiddleware'
    'chats.middleware.OffensiveLanguageMiddleware',
]

ROOT_URLCONF = 'messaging_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'messaging_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Addis_Ababa' # <--- IMPORTANT: Set to your specific timezone for local time
                                 # Used by datetime.now() in RestrictAccessByTimeMiddleware

USE_I18N = True

USE_TZ = False # <--- IMPORTANT: Set to False if you want datetime.now() to always
               # return naive datetime objects in local time according to TIME_ZONE.
               # If set to True, you should use django.utils.timezone.now() for timezone-aware datetimes.


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model setting
AUTH_USER_MODEL = 'chats.User'


# Django REST Framework Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication', # REQUIRED BY CHECKER
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', # Strong default for API
    ),
    'DEFAULT_PAGINATION_CLASS': 'chats.pagination.MessagePagination', # Use your custom pagination
    'PAGE_SIZE': 20, # Default size for the PageNumberPagination if used directly
}

# SIMPLE_JWT settings (Optional but Recommended)

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "UPDATE_LAST_LOGIN": False,

    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY, # Uses your Django project's secret key
    "VERIFYING_KEY": None, # This can be None if using HS256 and SIGNING_KEY is enough
    "AUDIENCE": None,
    "ISSUER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),
}


# LOGGING configuration for Django (This section is already correct from previous steps)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
        'request_formatter': { # Custom formatter for your request log
            'format': '{message}', # Only the message provided by logger.info()
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'requests_file': { # Handler for requests.log
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'requests.log'), # Log file in project root
            'formatter': 'request_formatter', # Use the custom formatter
        },
    },
    'loggers': {
        'django': { # Django's own logger
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'chats.middleware.logging_middleware': { # <--- Corrected logger name for logging middleware
            'handlers': ['requests_file', 'console'], # Send to file and console
            'level': 'INFO',
            'propagate': False, # Important: Prevent logs from being handled by parent loggers
        },
        # You can add other app-specific loggers here if needed
    },
    'root': { # Root logger for anything not specifically handled
        'handlers': ['console'],
        'level': 'WARNING',
    },
}
